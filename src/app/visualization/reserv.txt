import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';
import { ServiceService, VisualizationData } from './service.service';
import { CommonModule } from '@angular/common';
import { RouterModule } from '@angular/router';
import { Chart, ChartData, ChartOptions, ChartType } from 'chart.js';

@Component({
  selector: 'app-user-visualization',
  standalone: true,
  imports: [CommonModule, RouterModule],
  template: `
    <div *ngIf="visualizationData">
      <h5 class="text-center mt-3">User Visualization</h5>
      <div class="container mt-4">
        <div class="row text-center">
          <div class="col-md-6">
            <h6>Total Counts</h6>
            <canvas id="totalCountsChart"></canvas>
          </div>
          <div class="col-md-6">
            <h6>Gender Distribution</h6>
            <canvas id="genderDistributionChart"></canvas>
          </div>
        </div>
      </div>
    </div>
    <div *ngIf="errorMessage" class="alert alert-danger text-center">{{ errorMessage }}</div>
  `,
  styles: [`
    .container {
      padding: 1rem;
      border: 1px solid #ccc;
      border-radius: 5px;
      background-color: #f8f9fa;
    }
    h5 {
      color: #007bff;
    }
    canvas {
      max-width: 100%;
    }
  `]
})
export class UserVisualizationComponent implements OnInit, AfterViewInit, OnDestroy {
  visualizationData: VisualizationData | null = null;
  errorMessage: string = '';
  totalCountsChart: Chart | undefined;
  genderDistributionChart: Chart | undefined;

  constructor(private service: ServiceService) {}

  ngOnInit(): void {
    this.service.getUserVisualize().subscribe(
      data => {
        this.visualizationData = data;
      },
      error => {
        this.errorMessage = 'Unable to fetch visualization data';
        console.error(error);
      }
    );
  }

  ngAfterViewInit(): void {
    if (this.visualizationData) {
      this.initializeCharts();
    }
  }

  initializeCharts(): void {
    // Initialize Total Counts Bar Chart
    this.totalCountsChart = new Chart('totalCountsChart', {
      type: 'bar' as ChartType,
      data: {
        labels: ['Employees', 'Candidates', 'Admins'],
        datasets: [{
          data: [
            this.visualizationData!.totalEmp,
            this.visualizationData!.totalCandidate,
            this.visualizationData!.totalAdmin
          ],
          backgroundColor: ['#007bff', '#28a745', '#dc3545'],
          borderColor: ['#0056b3', '#218838', '#c82333'],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          x: {
            beginAtZero: true
          },
          y: {
            beginAtZero: true
          }
        }
      }
    });

    // Initialize Gender Distribution Pie Chart
    this.genderDistributionChart = new Chart('genderDistributionChart', {
      type: 'pie' as ChartType,
      data: {
        labels: ['Female Employees', 'Male Employees', 'Female Candidates', 'Male Candidates'],
        datasets: [{
          data: [
            this.visualizationData!.employees.female,
            this.visualizationData!.employees.male,
            this.visualizationData!.candidates.female,
            this.visualizationData!.candidates.male
          ],
          backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56'],
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false
      }
    });
  }

  ngOnDestroy(): void {
    // Clean up charts when component is destroyed
    this.totalCountsChart?.destroy();
    this.genderDistributionChart?.destroy();
  }
}
